numeric <- subGDP2$Dollars
head(numeric)
class(numeric)
numeric <- gsub(",", "", group)
numeric <- gsub(",", "")
numeric <- gsub(",", "", numeric)
head(numeric)
as.numeric(as.charact(numeric))
as.numeric(as.character(numeric))
class(numeric)
numeric <- as.numeric(as.character(numeric))
class(numeric)
head(numeric)
class(subGDP2$Dollars)
subGDP2$Dollars <- gsub(",", "", subGDP2$Dollars)
subGDP2$Dollars <- as.numeric(as.character(subGDP2$Dollars))
head(subGDP2$Dollars)
library(dplyr)
library(plyr)
?dplyr
browseVignettes(package = "dplyr")
arrange(subGDP2,rank)
arrange(subGDP2,Rank)
arrange(subGDP2,rank)
library("plyr")
library("dplyr")
arrange(subGDP2,rank)
str(subGDP2)
arrange(subGDP2,Ranking)
subGDP2$Ranking <- as.numeric(as.character(subGDP2$Ranking))
arrange(subGDP2,Ranking)
stats <- read.csv("stats.csv")
str(stats)
names(stats)
substats <- stats[!is.na(stats),]
head(substats)
substats <- stats[!is.na(stats$CountryCode),]
class(substats)
names(subGDP2)
names(substats)
mergedData = merge(subGDP2, substats, by.x = "CountryCode", by.y="CountryCode", all=TRUE)
head(mergedData)
names(mergedData)
head(substats$Currency.Unit)
class(mergedData)
tail(substats)
head(substats[,1:2])
head(substats[,1:3])
head(substats[,c(1,3,4)])
head(substats[,c(1,3,5)])
head(substats[,c(1,3,6)])
head(substats[,c(1,3,7)])
head(substats[,c(1,3,8)])
head(substats[,c(1,3,9)])
head(substats[,c(1,3,10)])
head(substats[,c(1,3,11)])
head(substats[,c(1,3,12)])
head(substats[,c(1,3,13)])
head(substats[,c(1,3,14)])
head(substats[,c(1,3,15)])
head(substats[,c(1,3,16)])
head(substats[,c(1,3,17)])
class(substats$CountryCode)
class(subGDP2$CountryCode)
subGDP2$CountryCode <- as.character(subGDP2$CountryCode)
class(subGDP2$CountryCode)
head(subGDP2$CountryCode)
substats$CountryCode <- as.character(substats$CountryCode)
mergedData = merge(subGDP2, substats, by.x = "CountryCode", by.y="CountryCode", all=TRUE)
mergedData2 = merge(subGDP2, substats, by.x = "CountryCode", by.y="CountryCode", all=TRUE)
rm(mergedData2)
class(substats)
class(substats$CountryCode)
mergedData2 = merge(subGDP2, substats, by.x = "CountryCode", by.y="CountryCode", all=FALSE)
mergedData2 = merge(substats, subGDP2, by.x = "CountryCode", by.y="CountryCode", all=FALSE)
mergedData3 = merge(substats, subGDP2, by.x = "CountryCode", by.y="CountryCode", all=FALSE)
rm(mergedData3)
mergedData3 = merge(substats, subGDP2, by.x = "CountryCode", by.y="CountryCode", all=TRUE)
rm(mergedData3)
rm(mergedData2)
str(subGDP2)
subGDP2$Economy <- as.character(subGDP2$Economy)
str(subGDP2)
joinedData <- join(subGDP2$CountryCode, substats$CountryCode)
joinedData <- join(subGDP2, substats)
head(substats)
DP3 <- na.omit(subGDP2)
mergedData = merge(DP3, substats, by.x = "CountryCode", by.y="CountryCode", all=TRUE)
mergedData = merge(DP3, substats, by.x = "CountryCode", by.y="CountryCode", all=FALSE)
names(mergedData)
arrange(mergedData,Ranking)
arrangedData <- arrange(mergedData,Ranking)
arrangedData[13,]
arrangedData[13,1]
arrangedData[13,34]
arrangedData[13,1]
arrangedData[13,"Short.Name"]
names(arrangedData)
head(arrangedData,13)
tail(arrangedData)
arrangedData <- arrange(mergedData,desc(Ranking))
tail(arrangedData)
head(arrangedData,13)
names(arrangedData)
head(arrangedData$Income.Group)
class(arrangedData$Income.Group)
dfHighIncome <- filter(arrangedData, Income.Group = "High income:OECD")
dfHighIncome <- filter(arrangedData, Income.Group = "High income: OECD")
?filter
dfHighIncome <- filter(arrangedData, Income.Group == "High income: OECD")
head(dfHighIncome)
mean(dfHighIncome$Ranking)
dfLowIncome <- filter(arrangedData, Income.Group == "High income: nonOECD")
mean(dfLowIncome$Ranking)
quantile(arrangedData)
?quantile
quantile(arrangedData, na.rm = TRUE)
quantile(arrangedData$Ranking)
?quartile
names(arrangedData)
head(arrangedData$Income.Group)
rm(list = ls(all = TRUE))
library(plyr) # load plyr first, then dplyr
library(data.table) # a prockage that handles dataframe better
library(dplyr) # for fancy data table manipulations and organization
temp <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",temp)
unzip(temp, list = TRUE) #This provides the list of variables and I choose the ones that are applicable for this data set
YTest <- read.table(unzip(temp, "UCI HAR Dataset/test/y_test.txt"))
XTest <- read.table(unzip(temp, "UCI HAR Dataset/test/X_test.txt"))
SubjectTest <- read.table(unzip(temp, "UCI HAR Dataset/test/subject_test.txt"))
YTrain <- read.table(unzip(temp, "UCI HAR Dataset/train/y_train.txt"))
XTrain <- read.table(unzip(temp, "UCI HAR Dataset/train/X_train.txt"))
SubjectTrain <- read.table(unzip(temp, "UCI HAR Dataset/train/subject_train.txt"))
Features <- read.table(unzip(temp, "UCI HAR Dataset/features.txt"))
unlink(temp) # very important to remove this
##DATA CLEANING
colnames(XTrain) <- t(Features[2])
colnames(XTest) <- t(Features[2])
XTrain$activities <- YTrain[, 1]
XTrain$participants <- SubjectTrain[, 1]
XTest$activities <- YTest[, 1]
XTest$participants <- SubjectTest[, 1]
##STEP 1
## Merge the training and test sets into one data set.
Master <- rbind(XTrain, XTest)
duplicated(colnames(Master))
Master <- Master[, !duplicated(colnames(Master))]
##STEP 2
Mean <- grep("mean()", names(Master), value = FALSE, fixed = TRUE)
#In addition, we need to include 555:559 as they have means and are associated with the gravity terms
Mean <- append(Mean, 471:477)
InstrumentMeanMatrix <- Master[Mean]
# For STD
STD <- grep("std()", names(Master), value = FALSE)
InstrumentSTDMatrix <- Master[STD]
##STEP 3
Master$activities <- as.character(Master$activities)
Master$activities[Master$activities == 1] <- "Walking"
Master$activities[Master$activities == 2] <- "Walking Upstairs"
Master$activities[Master$activities == 3] <- "Walking Downstairs"
Master$activities[Master$activities == 4] <- "Sitting"
Master$activities[Master$activities == 5] <- "Standing"
Master$activities[Master$activities == 6] <- "Laying"
Master$activities <- as.factor(Master$activities)
##STEP 4
names(Master)
names(Master) <- gsub("Acc", "Accelerator", names(Master))
names(Master) <- gsub("Mag", "Magnitude", names(Master))
names(Master) <- gsub("Gyro", "Gyroscope", names(Master))
names(Master) <- gsub("^t", "time", names(Master))
names(Master) <- gsub("^f", "frequency", names(Master))
Master$participants <- as.character(Master$participants)
Master$participants[Master$participants == 1] <- "Participant 1"
Master$participants[Master$participants == 2] <- "Participant 2"
Master$participants[Master$participants == 3] <- "Participant 3"
Master$participants[Master$participants == 4] <- "Participant 4"
Master$participants[Master$participants == 5] <- "Participant 5"
Master$participants[Master$participants == 6] <- "Participant 6"
Master$participants[Master$participants == 7] <- "Participant 7"
Master$participants[Master$participants == 8] <- "Participant 8"
Master$participants[Master$participants == 9] <- "Participant 9"
Master$participants[Master$participants == 10] <- "Participant 10"
Master$participants[Master$participants == 11] <- "Participant 11"
Master$participants[Master$participants == 12] <- "Participant 12"
Master$participants[Master$participants == 13] <- "Participant 13"
Master$participants[Master$participants == 14] <- "Participant 14"
Master$participants[Master$participants == 15] <- "Participant 15"
Master$participants[Master$participants == 16] <- "Participant 16"
Master$participants[Master$participants == 17] <- "Participant 17"
Master$participants[Master$participants == 18] <- "Participant 18"
Master$participants[Master$participants == 19] <- "Participant 19"
Master$participants[Master$participants == 20] <- "Participant 20"
Master$participants[Master$participants == 21] <- "Participant 21"
Master$participants[Master$participants == 22] <- "Participant 22"
Master$participants[Master$participants == 23] <- "Participant 23"
Master$participants[Master$participants == 24] <- "Participant 24"
Master$participants[Master$participants == 25] <- "Participant 25"
Master$participants[Master$participants == 26] <- "Participant 26"
Master$participants[Master$participants == 27] <- "Participant 27"
Master$participants[Master$participants == 28] <- "Participant 28"
Master$participants[Master$participants == 29] <- "Participant 29"
Master$participants[Master$participants == 30] <- "Participant 30"
Master$participants <- as.factor(Master$participants)
##STEP 5
Master.dt <- data.table(Master)
#This takes the mean of every column broken down by participants and activities
TidyData <- Master.dt[, lapply(.SD, mean), by = 'participants,activities']
write.table(TidyData, file = "Tidy.txt", row.names = FALSE)
str(TidyData)
?data.table
library(data.table)
?data.table
?unzip
rm(list = ls(all = TRUE))
?download.file
?read.table
?tempfile
?read.table
library(plyr)
library(dplyr)
# This code assumes that you've already downloaded and extracted your data
# to your current working directory under the "WK3Project/data/" folder
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",temp)
unzip(temp, list = TRUE) #This provides the list of variables and I choose the ones that are applicable for this data set
# Load data.table for fast subsetting, grouping, and updating
library(data.table)
YTest <- read.table(unzip(temp, "WK3Project/data/y_test.txt"))
XTest <- read.table(unzip(temp, "WK3Project/data/X_test.txt"))
SubjectTest <- read.table(unzip(temp, "WK3Project/data/subject_test.txt"))
YTrain <- read.table(unzip(temp, "WK3Project/data/y_train.txt"))
XTrain <- read.table(unzip(temp, "WK3Project/data/X_train.txt"))
SubjectTrain <- read.table(unzip(temp, "WK3Project/data/subject_train.txt"))
Features <- read.table(unzip(temp, "WK3Project/features.txt"))
unlink(temp) # very important to remove this
rm(list = ls(all = TRUE))
YTest <- read.table("UCI HAR Dataset/test/y_test.txt")
XTest <- read.table("UCI HAR Dataset/test/X_test.txt")
SubjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
YTrain <- read.table("UCI HAR Dataset/train/y_train.txt")
XTrain <- read.table("UCI HAR Dataset/train/X_train.txt")
SubjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
Features <- read.table("UCI HAR Dataset/features.txt")
Activity <- read.table(c(MainDir,"activity_labels.txt")
Activity <- read.table(c(MainDir,"activity_labels.txt"))
MainDir <- c("UCI HAR Dataset/")
Activity <- read.table(c(MainDir,"activity_labels.txt"))
MainDir
c(MainDir,"activity_lables.txt")
MainDir <- c(UCI HAR Dataset/)
MainDir <- "UCI HAR Dataset/"
MainDir
c(MainDir,"activity_lables.txt")
MainDir & "activity_lables.txt"
?file.path
?file
t <- file.path("UCI HAR Dataset","features.txt")
t
read.table
?read.table
t <- file.path("UCI HAR Dataset", "test")
t
Activity <- read.table(MainDir&"activity_labels.txt")
Activity <- read.table(MainDir&&"activity_labels.txt")
Activity <- read.table(MainDir)
Activity <- read.table(MainDir, "activity_labels.txt")
a <- "activity_lables.txt"
Activity <- read.table(MainDir, a)
rm(list = ls(all = TRUE))
rm(list = ls(all = TRUE))
# Load the ply and dplyr packacges. This will be used later
library(plyr)
library(dplyr)
# This code assumes that you've already downloaded and extracted your data
# to your current working directory under the "UCI HAR Dataset" folder
#temp <- tempfile()
#download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",temp)
#unzip(temp, list = TRUE) #This provides the list of variables and I choose the ones that are applicable for this data set
# Load data.table for fast subsetting, grouping, and updating
library(data.table)
MainDir <- file.path("UCI HAR Dataset")
testDir <- file.path("UCI HAR Dataset", "test")
trainDir <- file.path("UCI HAR Dataset","train")
Features <- read.table("UCI HAR Dataset/features.txt")
FeaturesInfo <- read.table("UCI HAR Dataset/features_info.txt")
Activity <- read.table("UCI HAR Dataset/activity_labels.txt")
# Move to the test directory and pull all the subsequent files
Ytest <- read.table("UCI HAR Dataset/test/y_test.txt")
Xtest <- read.table("UCI HAR Dataset/test/X_test.txt")
SubjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
# Move to the train directory and pull all the subsequent files
Ytrain <- read.table("UCI HAR Dataset/train/y_train.txt")
Xtrain <- read.table("UCI HAR Dataset/train/X_train.txt")
SubjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
head(Xtrain)
?t
head(Features)
Features
head(Ytrain)
head(xtrain)
head(Xtrain)
head(Ytrain[,1])
head(xtest)
head(Xtest)
ncol(Xtest)
ncolYXtest)
ncol(Ytest)
head(Ytest)
nrow(Ytest)
head(Ytrain)
head(Xtrain)
Xtrain$activities <- Ytrain[, 1]
head(Xtrain)
summary(Ytrain)
Ytrain
rm(list = ls(all = TRUE))
library(plyr)
library(dplyr)
library(data.table)
MainDir <- file.path("UCI HAR Dataset")
testDir <- file.path("UCI HAR Dataset", "test")
trainDir <- file.path("UCI HAR Dataset","train")
Features <- read.table("UCI HAR Dataset/features.txt")
Activity <- read.table("UCI HAR Dataset/activity_labels.txt")
# Move to the test directory and pull all the subsequent files
Ytest <- read.table("UCI HAR Dataset/test/y_test.txt")
Xtest <- read.table("UCI HAR Dataset/test/X_test.txt")
SubjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
# Move to the train directory and pull all the subsequent files
Ytrain <- read.table("UCI HAR Dataset/train/y_train.txt")
Xtrain <- read.table("UCI HAR Dataset/train/X_train.txt")
SubjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
colnames(Xtrain) <- t(Features[2])
colnames(Xtest) <- t(Features[2])
names(Xtrain)
head(Xtrain)
head(Ytrain)
ncol(Ytrain)
nrow(Ytrain)
ncol(Xtrain)
nrow(Xtrain)
Xtrain$variables <- Ytrain[, 1]
Xtrain$numoftrains <- SubjectTrain[, 1]
Xtest$variables <- Ytest[, 1]
Xtest$numoftrains <- SubjectTest[, 1]
Stats <- rbind(Xtrain, Xtest)
?duplicated
?join
Stats2 <- join(Xtrain, Xtest)
head(Stats)
head(Stats2)
Mean <- grep("mean()", names(Stats), value = FALSE, fixed = TRUE)
Mean2 <- grep("mean()", names(Stats2), value = FALSE, fixed = TRUE)
Mean
Mean2
duplicated(colnames(Stats))
duplicated(colnames(Stats2))
Stats3 <- Stats[, !duplicated(colnames(Stats))]
MeanStats <- Stats[Mean]
head(MeanStats)
head(Activity)
head(Stats$activities)
class(Activity)
ncol(Stats)
rm(list = ls(all = TRUE))
source('~/run_analysis.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(Stats$variables)
names(Xtrain)
head(Stats$variables)
nrow(Stats$variables)
source('~/.active-rstudio-document')
rm(list = ls(all = TRUE))
?rad.table
?read.table
Features <- read.table("UCI HAR Dataset/features.txt")
Activity <- read.table("UCI HAR Dataset/activity_labels.txt")
# Move to the test directory and pull all the subsequent files
Ytest <- read.table("UCI HAR Dataset/test/y_test.txt")
Xtest <- read.table("UCI HAR Dataset/test/X_test.txt")
SubjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt")
# Move to the train directory and pull all the subsequent files
Ytrain <- read.table("UCI HAR Dataset/train/y_train.txt")
Xtrain <- read.table("UCI HAR Dataset/train/X_train.txt")
SubjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt")
Activity
names(Activity) <- c("ID", "Activity")
Activity
names(Xtrain)
head(Xtrain)
head(features)
head(Geatures)
head(Features)
nrow(Features)
ncol(Xtrain)
colnames(Xtrain) <- t(Features[2])
colnames(Xtest) <- t(Features[2])
names(Xtrain)
rm(list = ls(all = TRUE))
source('~/run_analysis.R')
rm(list = ls(all = TRUE))
source('~/.active-rstudio-document')
rm(list = ls(all = TRUE))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
names(Stats2)
head(Stats2$variableID)
head(Ytrain)
head(Ytrain == 1)
head(Ytrain = 1)
trail(Ytrain)
tail(Ytrain)
class(Stats2)
class(Stats2$variableID)
names(Stats2) <- gsub("-","",names(Stats2))
names(Stats2)
names(Stats2) <- gsub("mean\\(\\)", "mean",names(Stats2))
names(Stats2)
names(Stats2) <- gsub("std\\(\\)", "SDeviation",names(Stats2))
names(Stats2)
?grep
names(Stats2) <- gsub("Acc", "Accelerator", names(Stats2))
names(Stats2) <- gsub("Mag", "Magnitude", names(Stats2))
names(Stats2) <- gsub("Gyro", "Gyroscope", names(Stats2))
names(Stats2) <- gsub("^t", "time", names(Stats2))
names(Stats2) <- gsub("^f", "frequency", names(Stats2))
names(Stats2)
nrow(Stats2$users)
ncol(Stats2users)
ncol(Stats2$users)
nrow(Stats2$angle(Y,gravityMean))
nrow(Stats2[angle(Y,gravityMean)])
had(Stats2$users, 100)
head(Stats2$users, 100)
head(Stats2$users, 5000:5100)
head(Stats2$users, 1:100)
head(Stats2$users, [1:100])
head(Stats2$users, 1:5)
head(Stats2$users, 1000)
rm(list = ls(all = TRUE))
source('~/run_analysis.R')
source('~/.active-rstudio-document')
rm(list = ls())
source('~/run_analysis.R')
View(StatsTD)
names(StatsTD)
rm(list=ls())
#load the dplyr package for subsetting the data
library(dplyr)
#load the data from your local working directory
epcdata <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
#create a data frame table through the dplyr function tbl_df
epcdata2 <- tbl_df(epcdata)
#subset february data
epcdata2_feb <- filter(epcdata2, Date %in% c("1/2/2007", "2/2/2007"))
#I learned the hard way that you need to concatenate the Date and Time columns
#this will then populate the X axis
epcdata2_feb$DT = paste(epcdata2_feb$Date, epcdata2_feb$Time)
epcdata2_feb$DT = as.POSIXct(strptime(epcdata2_feb$DT, "%d/%m/%Y %H:%M:%S"))
#Create a blank graph with the proper rows and columns for the 4 graphs
#png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
#Plot the 4 graphs
#Graph1
plot(epcdata2_feb$DT, epcdata2_feb$Global_active_power, type="l", xlab="", ylab="Global Active Power", cex=0.2)
#Graph2
plot(epcdata2_feb$DT, epcdata2_feb$Voltage, type="l", xlab="datetime", ylab="Voltage")
#Graph3
plot(epcdata2_feb$DT, epcdata2_feb$Sub_metering_1, type = "l", xlab = NA, ylab = "Energy Submetering")
lines(epcdata2_feb$DT, epcdata2_feb$Sub_metering_2, type="l", col="red")
lines(epcdata2_feb$DT, epcdata2_feb$Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
#Graph4
plot(epcdata2_feb$DT, epcdata2_feb$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file = "plot4.png", width = 480, height = 480)
dev.off()
getwd()
setwd("C:/Users/jwodek/Documents/ExploratoryData")
list.files
list.files()
#load the dplyr package for subsetting the data
library(dplyr)
#load the data from your local working directory
epcdata <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
#create a data frame table through the dplyr function tbl_df
epcdata2 <- tbl_df(epcdata)
#subset february data
epcdata2_feb <- filter(epcdata2, Date %in% c("1/2/2007", "2/2/2007"))
#I learned the hard way that you need to concatenate the Date and Time columns
#this will then populate the X axis
epcdata2_feb$DT = paste(epcdata2_feb$Date, epcdata2_feb$Time)
epcdata2_feb$DT = as.POSIXct(strptime(epcdata2_feb$DT, "%d/%m/%Y %H:%M:%S"))
#Create a blank graph with the proper rows and columns for the 4 graphs
#png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(epcdata2_feb$DT, epcdata2_feb$Global_active_power, type="l", xlab="", ylab="Global Active Power", cex=0.2)
plot(epcdata2_feb$DT, epcdata2_feb$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(epcdata2_feb$DT, epcdata2_feb$Sub_metering_1, type = "l", xlab = NA, ylab = "Energy Submetering")
lines(epcdata2_feb$DT, epcdata2_feb$Sub_metering_2, type="l", col="red")
lines(epcdata2_feb$DT, epcdata2_feb$Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
plot(epcdata2_feb$DT, epcdata2_feb$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file = "plot4.png", width = 480, height = 480)
dev.off()
